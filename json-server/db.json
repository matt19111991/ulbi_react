{
  "articles": [
    {
      "id": "1",
      "blocks": [
        {
          "id": "1",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "2",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "3",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);",
          "type": "CODE"
        },
        {
          "id": "4",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;",
          "type": "CODE"
        },
        {
          "id": "5",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "6",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы.",
            "Существуют и другие способы запуска JS-кода в браузере. Так, если говорить об обычном использовании программ на JavaScript, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .js, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами JavaScript, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "7",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "8",
          "paragraphs": [
            "JavaScript — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе Node.js. Если до сих пор вы не написали ни строчки кода на JS и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "9",
          "paragraphs": [
            "Это значит, что вы буквально в считанных секундах от своей первой JavaScript-программы."
          ],
          "title": "Заголовок нового блока",
          "type": "TEXT"
        }
      ],
      "createdAt": "26.02.2023",
      "img": "https://teknotower.com/wp-content/uploads/2020/11/js.png",
      "subtitle": "Что нового в JS за 2023 год?",
      "title": "Javascript news",
      "type": [
        "IT"
      ],
      "userId": "1",
      "views": 1022
    },
    {
      "id": "2",
      "blocks": [
        {
          "id": "1",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Python — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе. Если до сих пор вы не написали ни строчки кода и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой Python-программы.",
            "Существуют и другие способы запуска кода в браузере. Так, если говорить об обычном использовании программ на Python, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .py, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами Python, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "2",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "3",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);",
          "type": "CODE"
        },
        {
          "id": "4",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;",
          "type": "CODE"
        },
        {
          "id": "5",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска кода в браузере. Так, если говорить об обычном использовании программ на Python, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .py, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами Python, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "6",
          "paragraphs": [
            "Python — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе. Если до сих пор вы не написали ни строчки кода и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой Python-программы.",
            "Существуют и другие способы запуска кода в браузере. Так, если говорить об обычном использовании программ на Python, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .py, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами Python, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "7",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "8",
          "paragraphs": [
            "Python — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе. Если до сих пор вы не написали ни строчки кода и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой Python-программы."
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "9",
          "paragraphs": [
            "Это значит, что вы буквально в считанных секундах от своей первой Python-программы."
          ],
          "title": "Заголовок нового блока",
          "type": "TEXT"
        }
      ],
      "createdAt": "19.01.2023",
      "img": "https://w7.pngwing.com/pngs/234/329/png-transparent-python-logo-thumbnail.png",
      "subtitle": "Что нового у Python за 2023 год?",
      "title": "Python news",
      "type": [
        "IT"
      ],
      "userId": "1",
      "views": 845
    },
    {
      "id": "3",
      "blocks": [
        {
          "id": "1",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Kotlin — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе. Если до сих пор вы не написали ни строчки кода и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой Kotlin-программы.",
            "Существуют и другие способы запуска кода в браузере. Так, если говорить об обычном использовании программ на Kotlin, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .kt, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами Kotlin, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "2",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "3",
          "code": "const path = require('path');\n\nconst server = jsonServer.create();\n\nconst router = jsonServer.router(path.resolve(__dirname, 'db.json'));\n\nserver.use(jsonServer.defaults({}));\nserver.use(jsonServer.bodyParser);",
          "type": "CODE"
        },
        {
          "id": "4",
          "code": "<!DOCTYPE html>\n<html>\n  <body>\n    <p id=\"hello\"></p>\n\n    <script>\n      document.getElementById(\"hello\").innerHTML = \"Hello, world!\";\n    </script>\n  </body>\n</html>;",
          "type": "CODE"
        },
        {
          "id": "5",
          "paragraphs": [
            "Программа, которую по традиции называют «Hello, world!», очень проста. Она выводит куда-либо фразу «Hello, world!», или другую подобную, средствами некоего языка.",
            "Существуют и другие способы запуска кода в браузере. Так, если говорить об обычном использовании программ на Kotlin, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .kt, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами Kotlin, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "6",
          "paragraphs": [
            "Kotlin — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе. Если до сих пор вы не написали ни строчки кода и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой Kotlin-программы.",
            "Существуют и другие способы запуска кода в браузере. Так, если говорить об обычном использовании программ на Kotlin, они загружаются в браузер для обеспечения работы веб-страниц. Как правило, код оформляют в виде отдельных файлов с расширением .kt, которые подключают к веб-страницам, но программный код можно включать и непосредственно в код страницы. Всё это делается с помощью тега <script>. Когда браузер обнаруживает такой код, он выполняет его. Подробности о теге script можно посмотреть на сайте w3school.com. В частности, рассмотрим пример, демонстрирующий работу с веб-страницей средствами Kotlin, приведённый на этом ресурсе. Этот пример можно запустить и средствами данного ресурса (ищите кнопку Try it Yourself), но мы поступим немного иначе. А именно, создадим в каком-нибудь текстовом редакторе (например — в VS Code или в Notepad++) новый файл, который назовём hello.html, и добавим в него следующий код:"
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "7",
          "src": "https://hsto.org/r/w1560/getpro/habr/post_images/d56/a02/ffc/d56a02ffc62949b42904ca00c63d8cc1.png",
          "title": "Рисунок 1 - скриншот сайта",
          "type": "IMAGE"
        },
        {
          "id": "8",
          "paragraphs": [
            "Kotlin — это язык, программы на котором можно выполнять в разных средах. В нашем случае речь идёт о браузерах и о серверной платформе. Если до сих пор вы не написали ни строчки кода и читаете этот текст в браузере, на настольном компьютере, это значит, что вы буквально в считанных секундах от своей первой Kotlin-программы."
          ],
          "title": "Заголовок этого блока",
          "type": "TEXT"
        },
        {
          "id": "9",
          "paragraphs": [
            "Это значит, что вы буквально в считанных секундах от своей первой Kotlin-программы."
          ],
          "title": "Заголовок нового блока",
          "type": "TEXT"
        }
      ],
      "createdAt": "13.04.2023",
      "img": "https://w7.pngwing.com/pngs/314/161/png-transparent-kotlin-android-software-development-anonymous-function-programming-language-android-blue-angle-text-thumbnail.png",
      "subtitle": "Что нового у Kotlin за 2023 год?",
      "title": "Kotlin news",
      "type": [
        "IT"
      ],
      "userId": "1",
      "views": 566
    }
  ],
  "comments": [
    {
      "id": "1",
      "articleId": "1",
      "text": "Ortum tandem ducunt ad teres ignigena. Peritus, grandis amors cito contactus de teres, placidus galatae.",
      "userId": "1"
    },
    {
      "id": "2",
      "articleId": "1",
      "text": "Talis valebat satis imitaris fluctus est. A falsis, racana clemens mons.",
      "userId": "2"
    },
    {
      "id": "3",
      "articleId": "1",
      "text": "Ubi est rusticus eleates? Fluctui, resistentia, et amicitia.",
      "userId": "1"
    },
    {
      "id": "4",
      "articleId": "2",
      "text": "Sunt agripetaes amor lotus, domesticus aonideses.",
      "userId": "1"
    },
    {
      "id": "5",
      "articleId": "2",
      "text": "Cur planeta favere? Eheu, fortis cursus! Sunt axonaes imperium camerarius, mirabilis terrores.",
      "userId": "2"
    },
    {
      "id": "6",
      "articleId": "3",
      "text": "Cur exemplar cantare? Hercle, plasmator clemens!, imber!",
      "userId": "2"
    },
    {
      "id": "7",
      "articleId": "3",
      "text": "Nunquam tractare valebat. Experimentum una ducunt ad peritus deus.",
      "userId": "1"
    }
  ],
  "posts": [
    {
      "id": "1",
      "author": "typicode",
      "title": "json-server 1"
    },
    {
      "id": "2",
      "author": "typicode",
      "title": "json-server 2"
    },
    {
      "id": "3",
      "author": "typicode",
      "title": "json-server 3"
    },
    {
      "id": "4",
      "author": "typicode",
      "title": "json-server 4"
    }
  ],
  "profile": [
    {
      "id": "1",
      "age": 22,
      "avatar": "https://img.freepik.com/premium-vector/a-black-cat-with-a-red-eye-and-a-butterfly-on-the-front_890790-136.jpg",
      "city": "New-York",
      "country": "USA",
      "currency": "USD",
      "first": "Jack",
      "lastname": "Smith",
      "username": "Jack"
    },
    {
      "id": "2",
      "age": 31,
      "avatar": "https://img.freepik.com/premium-photo/man-stands-ledge-looking-cityscape_529521-762.jpg",
      "city": "Berlin",
      "country": "Germany",
      "currency": "EUR",
      "first": "Mary",
      "lastname": "Rude",
      "username": "Mary"
    }
  ],
  "users": [
    {
      "id": "1",
      "avatar": "https://img.freepik.com/premium-vector/a-black-cat-with-a-red-eye-and-a-butterfly-on-the-front_890790-136.jpg",
      "password": "12345",
      "role": "ADMIN",
      "username": "Jack"
    },
    {
      "id": "2",
      "avatar": "https://img.freepik.com/premium-photo/man-stands-ledge-looking-cityscape_529521-762.jpg",
      "password": "12345",
      "role": "USER",
      "username": "Mary"
    }
  ]
}
